name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Prepare build icons (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run prepare-build

      - name: Build Windows installer
        if: matrix.os == 'windows-latest'
        run: npm run dist:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Only publish when triggered by a tag push
          PUBLISH: ${{ startsWith(github.ref, 'refs/tags/') && 'always' || 'never' }}

      - name: Clean build artifacts (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          rm -rf release
          rm -rf dist

      - name: Build macOS installer
        if: matrix.os == 'macos-latest'
        run: npm run dist:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Only publish when triggered by a tag push
          PUBLISH: ${{ startsWith(github.ref, 'refs/tags/') && 'always' || 'never' }}

      - name: Build Linux installer
        if: matrix.os == 'ubuntu-latest'
        run: npm run dist:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Only publish when triggered by a tag push
          PUBLISH: ${{ startsWith(github.ref, 'refs/tags/') && 'always' || 'never' }}

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            release/*.exe
            release/*.exe.blockmap
          retention-days: 30

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: |
            release/*.dmg
            release/*.zip
          retention-days: 30

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: |
            release/*.AppImage
            release/*.deb
          retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-installer
          path: release-artifacts/windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-installer
          path: release-artifacts/macos

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-installer
          path: release-artifacts/linux

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            release-artifacts/windows/*
            release-artifacts/macos/*
            release-artifacts/linux/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
